# SPDX-License-Identifier: GPL-2.0
# scripts/dtc makefile
srctree = .
src = .
obj = .

CC := aarch64-linux-gnu-gcc
CFLAGS := -Os -static

all: dtc fdtoverlay

# *** Also keep .gitignore in sync when changing ***
progs-always-$(CONFIG_DTC)		+= dtc fdtoverlay
progs-always-$(CHECK_DT_BINDING)	+= dtc

dtc-objs	:= dtc.o flattree.o fstree.o data.o livetree.o treesource.o \
		   srcpos.o checks.o util.o
dtc-objs	+= dtc-lexer.lex.o dtc-parser.tab.o

# The upstream project builds libfdt as a separate library.  We are choosing to
# instead directly link the libfdt object files into fdtoverlay.
libfdt-objs	:= fdt.o fdt_ro.o fdt_wip.o fdt_sw.o fdt_rw.o fdt_strerror.o fdt_empty_tree.o fdt_addresses.o fdt_overlay.o
libfdt		= $(addprefix libfdt/,$(libfdt-objs))
fdtoverlay-objs	:= $(libfdt) fdtoverlay.o util.o

# Source files need to get at the userspace version of libfdt_env.h to compile
EXTRACFLAGS += -I $(srctree)/$(src)/libfdt
EXTRACFLAGS += -DNO_YAML

# Generated files need one more search path to include headers in source tree
CFLAGS_dtc-lexer.lex.o := -I $(srctree)/$(src)
CFLAGS_dtc-parser.tab.o := -I $(srctree)/$(src)

$(obj)/dtc-parser.tab.h $(obj)/dtc-parser.tab.c $(obj)/dtc-lexer.lex.c: dtc-parser.y
	bison --defines dtc-parser.y
	flex dtc-lexer.l && mv lex.yy.c dtc-lexer.lex.c

# dependencies on generated files need to be listed explicitly
$(obj)/dtc-lexer.lex.o: $(obj)/dtc-parser.tab.h

.SECONDARY_EXPANSION:

dtc: $(dtc-objs)
	$(CC) $(CFLAGS) $(EXTRACFLAGS) -o dtc $(dtc-objs)

fdtoverlay: $(fdtoverlay-objs)
	$(CC) $(CFLAGS) $(EXTRACFLAGS) -o fdtoverlay $(fdtoverlay-objs)

%.o: %.c
	$(CC) $(CFLAGS) $(EXTRACFLAGS) -c -I . -I libfdt -o $*.o $*.c


